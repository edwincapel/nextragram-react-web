{"version":3,"sources":["containers/LoginModal.js","containers/SignUpModal.js","components/AuthenticatedNavbar.js","components/RequireAuthentication.js","containers/Navbar.js","containers/UserImages.js","components/Users.js","pages/HomePage.js","containers/UserProfileHeader.js","pages/ProfilePage.js","pages/ShowImage.js","App.js","serviceWorker.js","index.js"],"names":["LoginModal","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleEmail","event","setState","email","target","value","handlePassword","password","handleSubmit","preventDefault","_this$state","state","axios","method","url","header","content-type","data","then","response","user","JSON","stringify","localStorage","setItem","auth_token","toggleLoginModal","toggleNavbar","history","push","concat","parse","current_user","id","catch","error","console","log","loginModal","_this$state2","react_default","a","createElement","Fragment","Modal","isOpen","toggle","className","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","for","Input","type","name","placeholder","onChange","Button","color","ModalFooter","onClick","toggleSignUpModal","Component","withRouter","SignUpModal","handleUsername","username","signUpModal","AuthenticatedNavbar","NavItem","react_router_dom","to","NavLink","href","handleLogout","RequireAuthentication","Navbar","removeItem","es_Navbar","light","expand","NavbarToggler","Collapse","navbar","Nav","getItem","components_RequireAuthentication","components_AuthenticatedNavbar","containers_LoginModal","containers_SignUpModal","UserImages","images","_this2","get","user_id","result","_this$props","image_width","image_height","length","Col","md","map","image","index","pathname","img","key","lib_default","src","width","height","style","Container","fluid","Row","Users","_ref","profileImage","UserImages_UserImages","HomePage","users","components_Users","UserProfileHeader","ProfilePage","UserProfileHeader_UserProfileHeader","match","params","ShowImage","location","backgroundImage","objectFit","backgroundSize","App","containers_Navbar","react_router","exact","path","render","HomePage_HomePage","assign","ProfilePage_ProfilePage","ShowImage_ShowImage","Boolean","window","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.388f8266.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { \n    Button, \n    Modal,\n    ModalHeader, \n    ModalBody, \n    ModalFooter,\n    Form,\n    FormGroup,\n    Label,\n    Input \n} from 'reactstrap';\nimport axios from 'axios';\nimport { withRouter} from 'react-router-dom';\n\n\nclass LoginModal extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            email: \"\",\n            password: \"\"\n        }\n    }\n\n    handleEmail = event => {\n        this.setState({\n            email: event.target.value\n        })\n    }\n\n    handlePassword = event => {\n        this.setState({\n            password: event.target.value\n        })\n    }\n    \n    handleSubmit = event => {\n        event.preventDefault()\n        const { email, password } = this.state\n\n        axios({\n            method: 'post',\n            url: 'https://insta.nextacademy.com/api/v1/login',\n            header: { 'content-type': 'application/json' },\n            data: {\n                email,\n                password\n            }\n        })\n        .then( response => {\n            let user = JSON.stringify(response.data.user)\n\n            localStorage.setItem('JWT', response.data.auth_token);\n            localStorage.setItem('current_user', user);\n            \n            this.props.toggleLoginModal()\n            this.props.toggleNavbar()\n            this.props.history.push(`/users/${JSON.parse(localStorage.current_user).id}`)\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n    }\n\n    render() {\n        const { loginModal } = this.props\n        const { email, password } = this.state\n\n        return (\n            <> \n                <Modal isOpen={loginModal} toggle={this.props.toggleLoginModal} className={this.props.className}>\n                    <ModalHeader toggle={this.props.toggleLoginModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleSubmit}>\n                            <FormGroup>\n                                <Label for=\"email\">Email</Label>\n                                <Input \n                                    type=\"email\" \n                                    name=\"email\" \n                                    id=\"loginEmail\" \n                                    placeholder=\"example@example.com\" \n                                    onChange={this.handleEmail}   \n                                    value={email} \n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"password\">Password</Label>\n                                <Input \n                                    type=\"password\" \n                                    name=\"password\" \n                                    id=\"loginPassword\" \n                                    placeholder=\"Password\" \n                                    onChange={this.handlePassword}\n                                    value={password}\n                                />\n                            </FormGroup>\n                            <Button color=\"primary\" type=\"submit\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                        <small>\n                            Create an account \n                            <span className=\"border-bottom\" onClick={this.props.toggleSignUpModal}>\n                            &nbsp;here\n                            </span>\n                        </small>\n                    </ModalFooter>\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default withRouter(LoginModal)","import React, { Component } from 'react'\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Form,\n    FormGroup,\n    Label,\n    Input\n} from 'reactstrap';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\n\n class SignUpModal extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: \"\",\n            email: \"\",\n            password: \"\"\n        }\n    }\n\n    handleEmail = event => {\n        this.setState({\n            email: event.target.value\n        })\n    }\n\n    handlePassword = event => {\n        this.setState({\n            password: event.target.value\n        })\n    }\n\n    handleUsername = event => {\n        this.setState({\n            username: event.target.value\n        })\n    }\n\n    handleSubmit = event => {\n        event.preventDefault()\n        const { email, password, username } = this.state\n\n        axios({\n            method: 'post',\n            url: 'https://insta.nextacademy.com/api/v1/users/',\n            header: { 'content-type': 'application/json' },\n            data: {\n                username,\n                email,\n                password\n            }\n        })\n        .then(response => {\n            let user = JSON.stringify(response.data.user)\n\n            localStorage.setItem('JWT', response.data.auth_token);\n            localStorage.setItem('current_user', user);\n\n            this.props.toggleSignUpModal()\n            this.props.toggleNavbar()\n            this.props.history.push(`/users/${JSON.parse(localStorage.current_user).id}`)\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n    }\n\n\n    render() {\n        const { signUpModal } = this.props\n        const { username, email, password } = this.state\n\n        return (\n            <>\n                <Modal isOpen={signUpModal} toggle={this.props.toggleSignUpModal} className={this.props.className}>\n                    <ModalHeader toggle={this.props.toggleSignUpModal}>Sign Up</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleSubmit}>\n                            <FormGroup>\n                                <Label for=\"username\">Username</Label>\n                                <Input \n                                    type=\"text\" \n                                    name=\"username\" \n                                    id=\"signUpUsername\" \n                                    placeholder=\"Username\" \n                                    onChange={this.handleUsername}\n                                    value={username}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"email\">Email</Label>\n                                <Input \n                                    type=\"email\" \n                                    name=\"email\" \n                                    id=\"signUpEmail\" \n                                    placeholder=\"example@example.com\" \n                                    onChange={this.handleEmail}\n                                    value={email}\n                                /> \n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"password\">Password</Label>\n                                <Input \n                                    type=\"password\" \n                                    name=\"password\" \n                                    id=\"signUpPassword\" \n                                    placeholder=\"Password\" \n                                    onChange={this.handlePassword}\n                                    value={password}\n                                />\n                            </FormGroup>\n                            <Button color=\"primary\" type=\"submit\">Sign Up</Button>\n                        </Form>\n                    </ModalBody>\n                    <ModalFooter>\n                        <small>\n                            Login\n                            <span className=\"border-bottom\" onClick={this.props.toggleLoginModal}>\n                                &nbsp;here\n                            </span>\n                        </small>\n                    </ModalFooter>\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default withRouter(SignUpModal)","import React from 'react'\nimport {\n    NavItem,\n    NavLink\n} from 'reactstrap'\nimport { Link } from 'react-router-dom';\n\n\nconst AuthenticatedNavbar = (props) => {\n    return(\n        <>\n            <NavItem>\n                <Link className=\"nav-link text-dark text-decoration-none\" to={`/users/${JSON.parse(localStorage.current_user).id}`}>\n                    Profile\n                </Link>\n            </NavItem>\n            <NavItem>\n                <NavLink href='#' className=\"text-dark text-decoration-none\" onClick={props.handleLogout}>\n                    Logout\n                </NavLink>\n            </NavItem>\n        </>\n    )\n}\n\nexport default AuthenticatedNavbar","import React from 'react'\nimport {\n    NavItem,\n    NavLink\n} from 'reactstrap'\n\nconst RequireAuthentication = (props) => {\n    return (\n        <>\n            <NavItem>\n                <NavLink href=\"#\" onClick={props.toggleLoginModal}>Login</NavLink>\n            </NavItem>\n            <NavItem>\n                <NavLink href=\"#\" onClick={props.toggleSignUpModal}>Sign Up</NavLink>\n            </NavItem>\n        </>\n    )\n}\n\nexport default RequireAuthentication","import React, { Component } from 'react';\nimport {\n    Collapse,\n    Navbar as NavbarBootstrap,\n    NavbarToggler,\n    Nav\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport LoginModal from './LoginModal'\nimport SignUpModal from './SignUpModal'\nimport AuthenticatedNavbar from '../components/AuthenticatedNavbar'\nimport RequireAuthentication from '../components/RequireAuthentication'\n\n class Navbar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false,\n            loginModal: false,\n            signUpModal: false,\n        };\n    }\n\n    toggle = () => {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    toggleLoginModal = () => {\n        this.setState({\n            signUpModal: false,\n            loginModal: !this.state.loginModal\n        })\n    }\n\n    toggleSignUpModal = () => {\n        this.setState({\n            loginModal: false,\n            signUpModal: !this.state.signUpModal\n        })\n    }\n\n    handleLogout = () => {\n        localStorage.removeItem('JWT');\n        localStorage.removeItem('current_user');\n        this.props.history.push('/')\n    }\n\n    render() {\n        const { loginModal, signUpModal } = this.state\n\n        return (\n            <>\n                <NavbarBootstrap color=\"light\" light expand=\"md\">\n                    <Link to=\"/\" className=\"navbar-brand text-decoration-none\">\n                        Nextagram\n                    </Link>\n                    <NavbarToggler onClick={this.toggle} />\n                    <Collapse isOpen={this.state.isOpen} navbar>\n                        <Nav className=\"ml-auto\" navbar>\n                            {\n                                !localStorage.getItem('JWT') && \n                                <RequireAuthentication \n                                    toggleLoginModal={this.toggleLoginModal} \n                                    toggleSignUpModal={this.toggleSignUpModal}\n                                />  \n                            }\n                            {\n                                localStorage.getItem('JWT') && \n                                <AuthenticatedNavbar \n                                    handleLogout={this.handleLogout}\n                                />\n                            }\n                        </Nav>\n                    </Collapse>\n                </NavbarBootstrap>\n                <LoginModal loginModal={loginModal} toggleLoginModal={this.toggleLoginModal} toggleSignUpModal={this.toggleSignUpModal} toggleNavbar={this.toggle}/>\n                <SignUpModal signUpModal={signUpModal} toggleSignUpModal={this.toggleSignUpModal} toggleLoginModal={this.toggleLoginModal} toggleNavbar={this.toggle}/>\n            </>\n        );\n    }\n}\n\nexport default withRouter(Navbar)","import React, {Component} from 'react'\nimport {\n    Container,\n    Row,\n    Col\n} from 'reactstrap'\nimport Image from \"react-graceful-image\";\nimport axios from 'axios'\nimport { Link } from 'react-router-dom';\n\n\nexport default class UserImages extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            images: []\n        }\n    }\n    componentDidMount(){\n        axios.get(`https://insta.nextacademy.com/api/v1/images?userId=${this.props.user_id}`)\n        .then(result => {\n          this.setState({\n            images: result.data\n          })\n        })\n        .catch(error => {\n          console.log('ERROR: ', error)\n        })\n    }\n    \n    render(){\n        const { images } = this.state\n        const { image_width, image_height } = this.props\n        \n        if (images.length > 0) {\n            return(\n                <Col md=\"9\" className=\"d-flex justify-content-center flex-wrap p-3\">\n                    {\n                        images.map((image,index) =>\n                            <Link\n                                to={{\n                                    pathname: \"/image\",\n                                    img: image\n                                }}\n                                key={index}\n                            >\n                                <Image\n                                    src={image}\n                                    width={image_width}\n                                    height={image_height}\n                                    className=\"p-1\">\n                                </Image>\n                            </Link>\n                        )\n                    }\n                </Col>\n            )\n        }\n\n        return(\n            <Col md=\"9\" style={{height:200}} className=\"p-0\">\n                <Container fluid className=\"h-100\">\n                    <Row className=\"h-100 justify-content-center align-items-center\">\n                        <Col md=\"10\" className=\"h-75 bg-light d-flex justify-content-center align-items-center p-0\">\n                            <h6>User has no Images</h6>\n                        </Col>\n                    </Row>\n                </Container>\n            </Col>\n        )\n    }\n}\n","import React from 'react'\nimport UserImages from '../containers/UserImages'\nimport Image from \"react-graceful-image\";\nimport { \n    Row,\n    Col\n} from 'reactstrap'\nimport { Link } from 'react-router-dom';\n\n\nconst Users = ({user}) => {\n    return(\n        <Row className=\"p-2 justify-content-center align-items-center\">\n            <Col md=\"3\" className=\"d-flex flex-column justify-content-center align-items-center\">\n                <Image \n                    src={user.profileImage} \n                    className=\"rounded-circle\" \n                    width={125} \n                    height={125}>   \n                </Image>\n                <Link \n                    to={`/users/${user.id}`} \n                    className=\"mt-1 text-decoration-none text-dark\"\n                >\n                    {user.username}\n                </Link>\n            </Col>\n            <UserImages \n                user_id={user.id}\n                image_width={225}\n                image_height={225}  \n            />\n        </Row>\n    )\n}\n\nexport default Users","import React, { Component } from 'react'\nimport {\n    Container\n} from 'reactstrap';\nimport Users from '../components/Users'\n\n\nexport default class HomePage extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n\n        }\n    }\n\n    render() {\n        const { users } = this.props\n\n        return (\n            users.map((user,index) => \n                <Container fluid key={index}>\n                    <Users user = { user } />\n                </Container>\n            )\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios';\nimport {\n    Row,\n    Col\n} from 'reactstrap';\nimport Image from 'react-graceful-image';\n\nexport default class UserProfileHeader extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            user: []\n        }\n    }\n    \n    componentDidMount(){\n        axios.get( `https://insta.nextacademy.com/api/v1/users/${this.props.user_id}`)\n        .then(result => {\n            this.setState({\n                user: result.data\n            })\n        })\n        .catch(error => {\n            console.log('ERROR: ', error)\n        })\n    }\n\n    render() {\n        const { user } = this.state\n\n        if (user.profileImage) {\n            return (\n                <>\n                    <Row className=\"bg-light d-flex justify-content-center\" style={{ height: \"275px\" }}>\n                        <Col md=\"3\" className=\"d-flex justify-content-center align-items-center\">\n                            <Image\n                                src={user.profileImage}\n                                width={200}\n                                height={200}\n                                className=\"p-1 rounded-circle\"\n                            />\n                        </Col>\n                        <Col md=\"3\" className=\"d-flex justify-content-center align-items-center\">\n                            <div>\n                                <h4 className=\"text-center\">{user.username}</h4>\n                                <small>This is where the profile description goes</small>\n                            </div>\n                        </Col>\n                    </Row>\n                </>\n            )  \n        }\n\n        return(\n            <h1>Nothing to see here</h1>\n        )\n        \n\n    }\n}\n","import React, { Component } from 'react'\nimport {\n    Container,\n    Row\n} from 'reactstrap';\nimport UserProfileHeader from '../containers/UserProfileHeader'\nimport UserImages from '../containers/UserImages'\n\nexport default class ProfilePage extends Component {\n  render() {\n    \n    return (\n        <>\n            <Container fluid>\n                <UserProfileHeader user_id={this.props.match.params.id} />\n                <Row className=\"d-flex justify-content-center\">\n                    <UserImages \n                        user_id={this.props.match.params.id} \n                        image_width={300}\n                        image_height={300}    \n                    />\n                </Row>\n            </Container>\n        </>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport {\n    Container,\n    Row,\n    Col\n} from 'reactstrap';\n\nexport default class ShowImage extends Component {\n    render() {\n        const { img } = this.props.location\n        if (img) {\n            localStorage.setItem('img', JSON.stringify(img))\n        }\n        return (\n                <>\n                    <Container fluid className=\"h-100 d-flex justify-content-center\">\n                        <Row className=\"h-75 w-100 justify-content-center mt-5\">\n                            <Col md=\"5\" className=\"p-0 w-100 h-100\">\n                                <div \n                                    className=\"w-100 h-100\" \n                                    style={{ \n                                        backgroundImage: `url(${JSON.parse(localStorage.getItem('img'))})`,\n                                        objectFit: 'cover', backgroundSize: 'cover'\n                                    }}\n                                />\n                            </Col>\n                            <Col md=\"6\" className=\"w-100 h-100 border\">\n                                <Container className=\"h-100 d-flex justify-content-center align-items-center\">\n                                    <Row className=\"h-50 w-100 justify-content-center align-items-center\">\n                                        <Col md=\"10\" className=\"h-100 bg-light  d-flex justify-content-center align-items-center\">\n                                            <h5>\n                                                User and Image details here\n                                            </h5>\n                                        </Col>\n                                    </Row>\n                                </Container>\n                            </Col>\n                        </Row>\n                    </Container>\n                </>\n            )\n        }\n}\n","import React,{Component} from 'react';\nimport axios from 'axios'\nimport './App.scss';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Navbar from './containers/Navbar'\nimport HomePage from './pages/HomePage'\nimport ProfilePage from './pages/ProfilePage'\nimport ShowImage from './pages/ShowImage'\n\nclass App extends Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      users: []\n    }\n  }\n\n  componentDidMount(){\n    axios.get('https://insta.nextacademy.com/api/v1/users')\n    .then(result => {\n      this.setState({\n        users: result.data\n      })\n    })\n    .catch(error => {\n      console.log('ERROR: ', error)\n    })\n  }\n\n  render(){\n    const {users} = this.state    \n\n    return (\n      <>\n        <Navbar />\n        <Switch>\n          <Route exact \n            path=\"/\"\n            render={props => \n              <HomePage \n                {...props}\n                users = {users}\n              />\n            }\n          />\n          <Route\n            path=\"/users/:id\"\n            render={props =>\n              <ProfilePage\n                {...props}\n              />\n            }\n          />\n          <Route\n            path=\"/image\"\n            render={props =>\n              <ShowImage\n                {...props}\n              />\n            }\n          />\n        </Switch>\n      </>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.scss';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}